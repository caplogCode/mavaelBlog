{"version":3,"sources":["./src/app/pages/post-editer/post-editer.page.html","./src/app/pages/post-editer/post-editer-routing.module.ts","./src/app/pages/post-editer/post-editer.module.ts","./src/app/pages/post-editer/post-editer.page.scss","./src/app/pages/post-editer/post-editer.page.ts"],"names":[],"mappings":"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","file":"pages-post-editer-post-editer-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>post-editer</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-card>\\n    <ion-item >\\n       <ion-input placeholder=\\\"Titel\\\" required type=\\\"text\\\" [(ngModel)]=\\\"title\\\" name=\\\"title\\\"> </ion-input>\\n    </ion-item>\\n </ion-card>\\n \\n<ion-card>\\n     <ion-item >\\n     <ion-textarea placeholder=\\\"Beitrag...\\\" rows=\\\"14\\\" cols=\\\"80\\\" required type=\\\"text\\\" [(ngModel)]=\\\"body\\\"  name=\\\"body\\\"> </ion-textarea>\\n   </ion-item>\\n</ion-card> \\n\\n\\n <ion-button expand=\\\"block\\\" shape=\\\"round\\\" (click)=\\\"updatePost()\\\">Aktualisieren</ion-button>\\n\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PostEditerPage } from './post-editer.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PostEditerPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PostEditerPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PostEditerPageRoutingModule } from './post-editer-routing.module';\n\nimport { PostEditerPage } from './post-editer.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PostEditerPageRoutingModule\n  ],\n  declarations: [PostEditerPage]\n})\nexport class PostEditerPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Bvc3QtZWRpdGVyL3Bvc3QtZWRpdGVyLnBhZ2Uuc2NzcyJ9 */\"","import { LoadingController, ToastController } from '@ionic/angular';\nimport { AngularFirestore } from '@angular/fire/firestore/';\nimport { PostsService } from '../services/posts.service';\nimport { ActivatedRoute} from '@angular/router';\nimport { Router} from '@angular/router';\nimport { Component, OnInit, AfterViewInit } from '@angular/core';\n\n@Component({\n  selector: 'app-post-editer',\n  templateUrl: './post-editer.page.html',\n  styleUrls: ['./post-editer.page.scss'],\n  providers: [PostsService]\n})\nexport class PostEditerPage implements OnInit, AfterViewInit {\n  title: string;\n  postId: string;\n  body: string;\n  timestamp: string;\n  constructor(\n    private route: ActivatedRoute,\n    private postService: PostsService,\n    private afs: AngularFirestore,\n    private router: Router,\n    private loadingCtrl: LoadingController,\n    private toastCtrl: ToastController\n\n  ) { }\n  ngAfterViewInit() {\n \n  }\n\n  ngOnInit() {\n    this.postId = this.route.snapshot.paramMap['postId']\n    \n  }\n  ionViewWillEnter(){\n  this.loadPost()\n  }\n\n  async loadPost(){\n    const loading = await this.loadingCtrl.create({\n      message: 'Bitte Warten...',\n      spinner: 'crescent',\n      showBackdrop: true\n    });\n    loading.present();\n\n    this.postService.getPost(this.postId).subscribe(post => {\n      this.title = post.title\n      this.body = post.body\n      loading.dismiss()\n    })\n\n  }\n  async toast(msg, status) {\n    const toast = await this.toastCtrl.create({\n      message: msg,\n      position: \"bottom\",\n      color: status,\n      duration: 2000,\n    });\n    toast.present();\n  }\n  async updatePost(){\n    const loading = await this.loadingCtrl.create({\n      message: 'Post wird aktualisiert...',\n      spinner: 'crescent',\n      showBackdrop: true\n    });\n    loading.present();\n\n    this.afs.collection(\"posts\").doc(this.postId).set({\n      'title': this.title,\n      'body': this.body\n    }, {merge: true})\n    .then(()=>{\n      loading.dismiss()\n      this.toast('Post wurde erfolgreich aktualisiert!', 'success')\n      this.router.navigateByUrl('/schedule')\n    })\n  }\n\n}\n"],"sourceRoot":"webpack:///"}