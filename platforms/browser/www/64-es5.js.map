{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-split-pane-ios.entry.js"],"names":[],"mappings":"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","sourcesContent":["import { r as registerInstance, d as createEvent, h, H as Host, e as getElement } from './index-e23c3ffd.js';\nimport { b as getIonMode } from './ionic-global-fbc9a2ac.js';\n\nconst splitPaneIosCss = \":host{--side-width:100%;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}::slotted(ion-menu.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width);min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.split-pane-visible) ::slotted(.split-pane-side),:host(.split-pane-visible) ::slotted(.split-pane-main){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none !important;box-shadow:none !important;z-index:0}:host(.split-pane-visible) ::slotted(.split-pane-main){-ms-flex:1;flex:1}:host(.split-pane-visible) ::slotted(.split-pane-side:not(ion-menu)),:host(.split-pane-visible) ::slotted(ion-menu.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}::slotted(.split-pane-side:not(ion-menu)){display:none}:host(.split-pane-visible) ::slotted(.split-pane-side){-ms-flex-order:-1;order:-1}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host{--border:0.55px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, #c8c7cc)));--side-min-width:270px;--side-max-width:28%}:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:0;border-right:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:unset;border-right:unset;-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border)}}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:var(--border);border-right:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:unset;border-right:unset;-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0}}\";\n\nconst splitPaneMdCss = \":host{--side-width:100%;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}::slotted(ion-menu.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width);min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.split-pane-visible) ::slotted(.split-pane-side),:host(.split-pane-visible) ::slotted(.split-pane-main){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none !important;box-shadow:none !important;z-index:0}:host(.split-pane-visible) ::slotted(.split-pane-main){-ms-flex:1;flex:1}:host(.split-pane-visible) ::slotted(.split-pane-side:not(ion-menu)),:host(.split-pane-visible) ::slotted(ion-menu.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}::slotted(.split-pane-side:not(ion-menu)){display:none}:host(.split-pane-visible) ::slotted(.split-pane-side){-ms-flex-order:-1;order:-1}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host{--border:1px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, rgba(0, 0, 0, 0.13))));--side-min-width:270px;--side-max-width:28%}:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:0;border-right:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:unset;border-right:unset;-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border)}}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:var(--border);border-right:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:unset;border-right:unset;-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0}}\";\n\nconst SPLIT_PANE_MAIN = 'split-pane-main';\nconst SPLIT_PANE_SIDE = 'split-pane-side';\nconst QUERY = {\n    'xs': '(min-width: 0px)',\n    'sm': '(min-width: 576px)',\n    'md': '(min-width: 768px)',\n    'lg': '(min-width: 992px)',\n    'xl': '(min-width: 1200px)',\n    'never': ''\n};\nconst SplitPane = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.visible = false;\n        /**\n         * If `true`, the split pane will be hidden.\n         */\n        this.disabled = false;\n        /**\n         * When the split-pane should be shown.\n         * Can be a CSS media query expression, or a shortcut expression.\n         * Can also be a boolean expression.\n         */\n        this.when = QUERY['lg'];\n        this.ionSplitPaneVisible = createEvent(this, \"ionSplitPaneVisible\", 7);\n    }\n    visibleChanged(visible) {\n        const detail = { visible, isPane: this.isPane.bind(this) };\n        this.ionSplitPaneVisible.emit(detail);\n    }\n    connectedCallback() {\n        this.styleChildren();\n        this.updateState();\n    }\n    disconnectedCallback() {\n        if (this.rmL) {\n            this.rmL();\n            this.rmL = undefined;\n        }\n    }\n    updateState() {\n        if (this.rmL) {\n            this.rmL();\n            this.rmL = undefined;\n        }\n        // Check if the split-pane is disabled\n        if (this.disabled) {\n            this.visible = false;\n            return;\n        }\n        // When query is a boolean\n        const query = this.when;\n        if (typeof query === 'boolean') {\n            this.visible = query;\n            return;\n        }\n        // When query is a string, let's find first if it is a shortcut\n        const mediaQuery = QUERY[query] || query;\n        // Media query is empty or null, we hide it\n        if (mediaQuery.length === 0) {\n            this.visible = false;\n            return;\n        }\n        if (window.matchMedia) {\n            // Listen on media query\n            const callback = (q) => {\n                this.visible = q.matches;\n            };\n            const mediaList = window.matchMedia(mediaQuery);\n            mediaList.addListener(callback);\n            this.rmL = () => mediaList.removeListener(callback);\n            this.visible = mediaList.matches;\n        }\n    }\n    isPane(element) {\n        if (!this.visible) {\n            return false;\n        }\n        return element.parentElement === this.el\n            && element.classList.contains(SPLIT_PANE_SIDE);\n    }\n    styleChildren() {\n        const contentId = this.contentId;\n        const children = this.el.children;\n        const nu = this.el.childElementCount;\n        let foundMain = false;\n        for (let i = 0; i < nu; i++) {\n            const child = children[i];\n            const isMain = contentId !== undefined && child.id === contentId;\n            if (isMain) {\n                if (foundMain) {\n                    console.warn('split pane cannot have more than one main node');\n                    return;\n                }\n                foundMain = true;\n            }\n            setPaneClass(child, isMain);\n        }\n        if (!foundMain) {\n            console.warn('split pane does not have a specified main node');\n        }\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { class: {\n                [mode]: true,\n                // Used internally for styling\n                [`split-pane-${mode}`]: true,\n                'split-pane-visible': this.visible\n            } }, h(\"slot\", null)));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"visible\": [\"visibleChanged\"],\n        \"disabled\": [\"updateState\"],\n        \"when\": [\"updateState\"]\n    }; }\n};\nconst setPaneClass = (el, isMain) => {\n    let toAdd;\n    let toRemove;\n    if (isMain) {\n        toAdd = SPLIT_PANE_MAIN;\n        toRemove = SPLIT_PANE_SIDE;\n    }\n    else {\n        toAdd = SPLIT_PANE_SIDE;\n        toRemove = SPLIT_PANE_MAIN;\n    }\n    const classList = el.classList;\n    classList.add(toAdd);\n    classList.remove(toRemove);\n};\nSplitPane.style = {\n    /*STENCIL:MODE:ios*/ ios: splitPaneIosCss,\n    /*STENCIL:MODE:md*/ md: splitPaneMdCss\n};\n\nexport { SplitPane as ion_split_pane };\n"],"sourceRoot":"webpack:///","file":"64-es5.js"}