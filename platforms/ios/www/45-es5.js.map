{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-radio_2-ios.entry.js"],"names":[],"mappings":"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","sourcesContent":["import { r as registerInstance, d as createEvent, h, H as Host, e as getElement } from './index-e23c3ffd.js';\nimport { b as getIonMode } from './ionic-global-fbc9a2ac.js';\nimport { f as findItemLabel } from './helpers-5c745fbd.js';\nimport { c as createColorClasses, h as hostContext } from './theme-c2dc54d9.js';\n\nconst radioIosCss = \":host{--inner-border-radius:50%;display:inline-block;position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.radio-disabled){pointer-events:none}.radio-icon{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;contain:layout size style}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}[dir=rtl] button,:host-context([dir=rtl]) button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.radio-icon,.radio-inner{-webkit-box-sizing:border-box;box-sizing:border-box}:host{--color-checked:var(--ion-color-primary, #3880ff);width:15px;height:24px}:host(.ion-color.radio-checked) .radio-inner{border-color:var(--ion-color-base)}.item-radio.item-ios ion-label{margin-left:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.item-radio.item-ios ion-label{margin-left:unset;-webkit-margin-start:0;margin-inline-start:0}}.radio-inner{width:33%;height:50%}:host(.radio-checked) .radio-inner{-webkit-transform:rotate(45deg);transform:rotate(45deg);border-width:2px;border-top-width:0;border-left-width:0;border-style:solid;border-color:var(--color-checked)}:host(.radio-disabled){opacity:0.3}:host(.ion-focused) .radio-icon::after{border-radius:var(--inner-border-radius);left:-9px;top:-8px;display:block;position:absolute;width:36px;height:36px;background:var(--ion-color-primary-tint, #4c8dff);content:\\\"\\\";opacity:0.2}:host-context([dir=rtl]):host(.ion-focused) .radio-icon::after,:host-context([dir=rtl]).ion-focused .radio-icon::after{left:unset;right:unset;right:-9px}:host(.in-item){margin-left:10px;margin-right:11px;margin-top:8px;margin-bottom:8px;display:block;position:static}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item){margin-left:unset;margin-right:unset;-webkit-margin-start:10px;margin-inline-start:10px;-webkit-margin-end:11px;margin-inline-end:11px}}:host(.in-item[slot=start]){margin-left:3px;margin-right:21px;margin-top:8px;margin-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:3px;margin-inline-start:3px;-webkit-margin-end:21px;margin-inline-end:21px}}\";\n\nconst radioMdCss = \":host{--inner-border-radius:50%;display:inline-block;position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.radio-disabled){pointer-events:none}.radio-icon{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;contain:layout size style}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}[dir=rtl] button,:host-context([dir=rtl]) button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.radio-icon,.radio-inner{-webkit-box-sizing:border-box;box-sizing:border-box}:host{--color:var(--ion-color-step-400, #999999);--color-checked:var(--ion-color-primary, #3880ff);--border-width:2px;--border-style:solid;--border-radius:50%;width:20px;height:20px}:host(.ion-color) .radio-inner{background:var(--ion-color-base)}:host(.ion-color.radio-checked) .radio-icon{border-color:var(--ion-color-base)}.radio-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;border-radius:var(--border-radius);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--color)}.radio-inner{border-radius:var(--inner-border-radius);width:calc(50% + var(--border-width));height:calc(50% + var(--border-width));-webkit-transform:scale3d(0, 0, 0);transform:scale3d(0, 0, 0);-webkit-transition:-webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:-webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:transform 280ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);background:var(--color-checked)}:host(.radio-checked) .radio-icon{border-color:var(--color-checked)}:host(.radio-checked) .radio-inner{-webkit-transform:scale3d(1, 1, 1);transform:scale3d(1, 1, 1)}:host(.radio-disabled){opacity:0.3}:host(.ion-focused) .radio-icon::after{border-radius:var(--inner-border-radius);left:-12px;top:-12px;display:block;position:absolute;width:36px;height:36px;background:var(--ion-color-primary-tint, #4c8dff);content:\\\"\\\";opacity:0.2}:host-context([dir=rtl]):host(.ion-focused) .radio-icon::after,:host-context([dir=rtl]).ion-focused .radio-icon::after{left:unset;right:unset;right:-12px}:host(.in-item){margin-left:0;margin-right:0;margin-top:9px;margin-bottom:9px;display:block;position:static}:host(.in-item[slot=start]){margin-left:4px;margin-right:36px;margin-top:11px;margin-bottom:10px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:4px;margin-inline-start:4px;-webkit-margin-end:36px;margin-inline-end:36px}}\";\n\nconst Radio = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.inputId = `ion-rb-${radioButtonIds++}`;\n        this.radioGroup = null;\n        /**\n         * If `true`, the radio is selected.\n         */\n        this.checked = false;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * If `true`, the user cannot interact with the radio.\n         */\n        this.disabled = false;\n        this.updateState = () => {\n            if (this.radioGroup) {\n                this.checked = this.radioGroup.value === this.value;\n            }\n        };\n        this.onFocus = () => {\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.ionBlur.emit();\n        };\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    }\n    connectedCallback() {\n        if (this.value === undefined) {\n            this.value = this.inputId;\n        }\n        const radioGroup = this.radioGroup = this.el.closest('ion-radio-group');\n        if (radioGroup) {\n            this.updateState();\n            radioGroup.addEventListener('ionChange', this.updateState);\n        }\n    }\n    disconnectedCallback() {\n        const radioGroup = this.radioGroup;\n        if (radioGroup) {\n            radioGroup.removeEventListener('ionChange', this.updateState);\n            this.radioGroup = null;\n        }\n    }\n    componentWillLoad() {\n        this.emitStyle();\n    }\n    emitStyle() {\n        this.ionStyle.emit({\n            'radio-checked': this.checked,\n            'interactive-disabled': this.disabled,\n        });\n    }\n    render() {\n        const { inputId, disabled, checked, color, el } = this;\n        const mode = getIonMode(this);\n        const labelId = inputId + '-lbl';\n        const label = findItemLabel(el);\n        if (label) {\n            label.id = labelId;\n        }\n        return (h(Host, { role: \"radio\", \"aria-disabled\": disabled ? 'true' : null, \"aria-checked\": `${checked}`, \"aria-labelledby\": labelId, class: Object.assign(Object.assign({}, createColorClasses(color)), { [mode]: true, 'in-item': hostContext('ion-item', el), 'interactive': true, 'radio-checked': checked, 'radio-disabled': disabled }) }, h(\"div\", { class: \"radio-icon\", part: \"container\" }, h(\"div\", { class: \"radio-inner\", part: \"mark\" })), h(\"button\", { type: \"button\", onFocus: this.onFocus, onBlur: this.onBlur, disabled: disabled })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"color\": [\"emitStyle\"],\n        \"checked\": [\"emitStyle\"],\n        \"disabled\": [\"emitStyle\"]\n    }; }\n};\nlet radioButtonIds = 0;\nRadio.style = {\n    /*STENCIL:MODE:ios*/ ios: radioIosCss,\n    /*STENCIL:MODE:md*/ md: radioMdCss\n};\n\nconst RadioGroup = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.inputId = `ion-rg-${radioGroupIds++}`;\n        this.labelId = `${this.inputId}-lbl`;\n        /**\n         * If `true`, the radios can be deselected.\n         */\n        this.allowEmptySelection = false;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        this.onClick = (ev) => {\n            const selectedRadio = ev.target && ev.target.closest('ion-radio');\n            if (selectedRadio) {\n                const currentValue = this.value;\n                const newValue = selectedRadio.value;\n                if (newValue !== currentValue) {\n                    this.value = newValue;\n                }\n                else if (this.allowEmptySelection) {\n                    this.value = undefined;\n                }\n            }\n        };\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n    }\n    valueChanged(value) {\n        this.ionChange.emit({ value });\n    }\n    async connectedCallback() {\n        // Get the list header if it exists and set the id\n        // this is used to set aria-labelledby\n        const el = this.el;\n        const header = el.querySelector('ion-list-header') || el.querySelector('ion-item-divider');\n        if (header) {\n            const label = header.querySelector('ion-label');\n            if (label) {\n                this.labelId = label.id = this.name + '-lbl';\n            }\n        }\n    }\n    render() {\n        return (h(Host, { role: \"radiogroup\", \"aria-labelledby\": this.labelId, onClick: this.onClick, class: getIonMode(this) }));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"value\": [\"valueChanged\"]\n    }; }\n};\nlet radioGroupIds = 0;\n\nexport { Radio as ion_radio, RadioGroup as ion_radio_group };\n"],"sourceRoot":"webpack:///","file":"45-es5.js"}