{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-refresher_2-ios.entry.js"],"names":[],"mappings":"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","sourcesContent":["import { w as writeTask, r as registerInstance, d as createEvent, f as readTask, h, e as getElement, H as Host } from './index-e23c3ffd.js';\nimport { i as isPlatform, b as getIonMode, c as config } from './ionic-global-fbc9a2ac.js';\nimport './utils-918b8264.js';\nimport './index.mjs';\nimport { c as clamp, g as getElementRoot, r as raf } from './helpers-5c745fbd.js';\nimport { c as createAnimation } from './animation-6064ebf7.js';\nimport './index-b60886e1.js';\nimport './ios.transition-4d4e1cfa.js';\nimport './md.transition-c0dc4c62.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-685f606a.js';\nimport './index-6f647ec8.js';\nimport { s as sanitizeDOMString } from './index-79d74e0b.js';\nimport './hardware-back-button-7b6ede21.js';\nimport './index-88d5bee7.js';\nimport './overlays-e78a87c2.js';\nimport { a as hapticImpact } from './haptic-da73c8fd.js';\nimport { S as SPINNERS } from './spinner-configs-c78e170e.js';\n\nconst getRefresherAnimationType = (contentEl) => {\n    const previousSibling = contentEl.previousElementSibling;\n    const hasHeader = previousSibling !== null && previousSibling.tagName === 'ION-HEADER';\n    return hasHeader ? 'translate' : 'scale';\n};\nconst createPullingAnimation = (type, pullingSpinner) => {\n    return type === 'scale' ? createScaleAnimation(pullingSpinner) : createTranslateAnimation(pullingSpinner);\n};\nconst createBaseAnimation = (pullingRefresherIcon) => {\n    const spinner = pullingRefresherIcon.querySelector('ion-spinner');\n    const circle = spinner.shadowRoot.querySelector('circle');\n    const spinnerArrowContainer = pullingRefresherIcon.querySelector('.spinner-arrow-container');\n    const arrowContainer = pullingRefresherIcon.querySelector('.arrow-container');\n    const arrow = (arrowContainer) ? arrowContainer.querySelector('ion-icon') : null;\n    const baseAnimation = createAnimation()\n        .duration(1000)\n        .easing('ease-out');\n    const spinnerArrowContainerAnimation = createAnimation()\n        .addElement(spinnerArrowContainer)\n        .keyframes([\n        { offset: 0, opacity: '0.3' },\n        { offset: 0.45, opacity: '0.3' },\n        { offset: 0.55, opacity: '1' },\n        { offset: 1, opacity: '1' }\n    ]);\n    const circleInnerAnimation = createAnimation()\n        .addElement(circle)\n        .keyframes([\n        { offset: 0, strokeDasharray: '1px, 200px' },\n        { offset: 0.20, strokeDasharray: '1px, 200px' },\n        { offset: 0.55, strokeDasharray: '100px, 200px' },\n        { offset: 1, strokeDasharray: '100px, 200px' }\n    ]);\n    const circleOuterAnimation = createAnimation()\n        .addElement(spinner)\n        .keyframes([\n        { offset: 0, transform: 'rotate(-90deg)' },\n        { offset: 1, transform: 'rotate(210deg)' }\n    ]);\n    /**\n     * Only add arrow animation if present\n     * this allows users to customize the spinners\n     * without errors being thrown\n     */\n    if (arrowContainer && arrow) {\n        const arrowContainerAnimation = createAnimation()\n            .addElement(arrowContainer)\n            .keyframes([\n            { offset: 0, transform: 'rotate(0deg)' },\n            { offset: 0.30, transform: 'rotate(0deg)' },\n            { offset: 0.55, transform: 'rotate(280deg)' },\n            { offset: 1, transform: 'rotate(400deg)' }\n        ]);\n        const arrowAnimation = createAnimation()\n            .addElement(arrow)\n            .keyframes([\n            { offset: 0, transform: 'translateX(2px) scale(0)' },\n            { offset: 0.30, transform: 'translateX(2px) scale(0)' },\n            { offset: 0.55, transform: 'translateX(-1.5px) scale(1)' },\n            { offset: 1, transform: 'translateX(-1.5px) scale(1)' }\n        ]);\n        baseAnimation.addAnimation([arrowContainerAnimation, arrowAnimation]);\n    }\n    return baseAnimation.addAnimation([spinnerArrowContainerAnimation, circleInnerAnimation, circleOuterAnimation]);\n};\nconst createScaleAnimation = (pullingRefresherIcon) => {\n    const height = pullingRefresherIcon.clientHeight;\n    const spinnerAnimation = createAnimation()\n        .addElement(pullingRefresherIcon)\n        .keyframes([\n        { offset: 0, transform: `scale(0) translateY(-${height + 20}px)` },\n        { offset: 1, transform: 'scale(1) translateY(100px)' }\n    ]);\n    return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\nconst createTranslateAnimation = (pullingRefresherIcon) => {\n    const height = pullingRefresherIcon.clientHeight;\n    const spinnerAnimation = createAnimation()\n        .addElement(pullingRefresherIcon)\n        .keyframes([\n        { offset: 0, transform: `translateY(-${height + 20}px)` },\n        { offset: 1, transform: 'translateY(100px)' }\n    ]);\n    return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\nconst createSnapBackAnimation = (pullingRefresherIcon) => {\n    return createAnimation()\n        .duration(125)\n        .addElement(pullingRefresherIcon)\n        .fromTo('transform', 'translateY(var(--ion-pulling-refresher-translate, 100px))', 'translateY(0px)');\n};\n// iOS Native Refresher\n// -----------------------------\nconst setSpinnerOpacity = (spinner, opacity) => {\n    spinner.style.setProperty('opacity', opacity.toString());\n};\nconst handleScrollWhilePulling = (spinner, ticks, opacity, currentTickToShow) => {\n    writeTask(() => {\n        setSpinnerOpacity(spinner, opacity);\n        ticks.forEach((el, i) => el.style.setProperty('opacity', (i <= currentTickToShow) ? '0.99' : '0'));\n    });\n};\nconst handleScrollWhileRefreshing = (spinner, lastVelocityY) => {\n    writeTask(() => {\n        // If user pulls down quickly, the spinner should spin faster\n        spinner.style.setProperty('--refreshing-rotation-duration', (lastVelocityY >= 1.0) ? '0.5s' : '2s');\n        spinner.style.setProperty('opacity', '1');\n    });\n};\nconst translateElement = (el, value) => {\n    if (!el) {\n        return Promise.resolve();\n    }\n    const trans = transitionEndAsync(el, 200);\n    writeTask(() => {\n        el.style.setProperty('transition', '0.2s all ease-out');\n        if (value === undefined) {\n            el.style.removeProperty('transform');\n        }\n        else {\n            el.style.setProperty('transform', `translate3d(0px, ${value}, 0px)`);\n        }\n    });\n    return trans;\n};\n// Utils\n// -----------------------------\nconst shouldUseNativeRefresher = (referenceEl, mode) => {\n    const pullingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n    const refreshingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n    return (pullingSpinner !== null &&\n        refreshingSpinner !== null &&\n        ((mode === 'ios' && isPlatform('mobile') && referenceEl.style.webkitOverflowScrolling !== undefined) ||\n            mode === 'md'));\n};\nconst transitionEndAsync = (el, expectedDuration = 0) => {\n    return new Promise(resolve => {\n        transitionEnd(el, expectedDuration, resolve);\n    });\n};\nconst transitionEnd = (el, expectedDuration = 0, callback) => {\n    let unRegTrans;\n    let animationTimeout;\n    const opts = { passive: true };\n    const ANIMATION_FALLBACK_TIMEOUT = 500;\n    const unregister = () => {\n        if (unRegTrans) {\n            unRegTrans();\n        }\n    };\n    const onTransitionEnd = (ev) => {\n        if (ev === undefined || el === ev.target) {\n            unregister();\n            callback(ev);\n        }\n    };\n    if (el) {\n        el.addEventListener('webkitTransitionEnd', onTransitionEnd, opts);\n        el.addEventListener('transitionend', onTransitionEnd, opts);\n        animationTimeout = setTimeout(onTransitionEnd, expectedDuration + ANIMATION_FALLBACK_TIMEOUT);\n        unRegTrans = () => {\n            if (animationTimeout) {\n                clearTimeout(animationTimeout);\n                animationTimeout = undefined;\n            }\n            el.removeEventListener('webkitTransitionEnd', onTransitionEnd, opts);\n            el.removeEventListener('transitionend', onTransitionEnd, opts);\n        };\n    }\n    return unregister;\n};\n\nconst refresherIosCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-ios .refresher-pulling-icon,.refresher-ios .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-ios .refresher-pulling-text,.refresher-ios .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-lines-ios line,.refresher-ios .refresher-refreshing .spinner-lines-small-ios line,.refresher-ios .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-bubbles circle,.refresher-ios .refresher-refreshing .spinner-circles circle,.refresher-ios .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}.refresher-native .refresher-refreshing ion-spinner{--refreshing-rotation-duration:2s;display:none;-webkit-animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards;animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards}.refresher-native .refresher-refreshing{display:none;-webkit-animation:250ms linear refresher-pop forwards;animation:250ms linear refresher-pop forwards}.refresher-native.refresher-refreshing .refresher-pulling ion-spinner,.refresher-native.refresher-completing .refresher-pulling ion-spinner{display:none}.refresher-native.refresher-refreshing .refresher-refreshing ion-spinner,.refresher-native.refresher-completing .refresher-refreshing ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-pulling ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-refreshing ion-spinner{display:none}@-webkit-keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@-webkit-keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}@keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}\";\n\nconst refresherMdCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-md .refresher-pulling-icon,.refresher-md .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-md .refresher-pulling-text,.refresher-md .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-lines-md line,.refresher-md .refresher-refreshing .spinner-lines-small-md line,.refresher-md .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-bubbles circle,.refresher-md .refresher-refreshing .spinner-circles circle,.refresher-md .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;width:24px;height:24px;color:var(--ion-color-primary, #3880ff)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native .spinner-arrow-container{display:inherit}ion-refresher.refresher-native .arrow-container{display:block;position:absolute;width:24px;height:24px}ion-refresher.refresher-native .arrow-container ion-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;left:0;right:0;bottom:-4px;position:absolute;color:var(--ion-color-primary, #3880ff);font-size:12px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .arrow-container ion-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native.refresher-pulling ion-refresher-content .refresher-pulling,ion-refresher.refresher-native.refresher-ready ion-refresher-content .refresher-pulling{display:-ms-flexbox;display:flex}ion-refresher.refresher-native.refresher-refreshing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-completing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-cancelling ion-refresher-content .refresher-refreshing{display:-ms-flexbox;display:flex}ion-refresher.refresher-native .refresher-pulling-icon{-webkit-transform:translateY(calc(-100% - 10px));transform:translateY(calc(-100% - 10px))}ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;border-radius:100%;padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;display:-ms-flexbox;display:flex;border:1px solid #ececec;background:white;-webkit-box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1);box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}\";\n\nconst Refresher = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.appliedStyles = false;\n        this.didStart = false;\n        this.progress = 0;\n        this.pointerDown = false;\n        this.needsCompletion = false;\n        this.didRefresh = false;\n        this.lastVelocityY = 0;\n        this.animations = [];\n        this.nativeRefresher = false;\n        /**\n         * The current state which the refresher is in. The refresher's states include:\n         *\n         * - `inactive` - The refresher is not being pulled down or refreshing and is currently hidden.\n         * - `pulling` - The user is actively pulling down the refresher, but has not reached the point yet that if the user lets go, it'll refresh.\n         * - `cancelling` - The user pulled down the refresher and let go, but did not pull down far enough to kick off the `refreshing` state. After letting go, the refresher is in the `cancelling` state while it is closing, and will go back to the `inactive` state once closed.\n         * - `ready` - The user has pulled down the refresher far enough that if they let go, it'll begin the `refreshing` state.\n         * - `refreshing` - The refresher is actively waiting on the async operation to end. Once the refresh handler calls `complete()` it will begin the `completing` state.\n         * - `completing` - The `refreshing` state has finished and the refresher is in the way of closing itself. Once closed, the refresher will go back to the `inactive` state.\n         */\n        this.state = 1 /* Inactive */;\n        /**\n         * The minimum distance the user must pull down until the\n         * refresher will go into the `refreshing` state.\n         * Does not apply when the refresher content uses a spinner,\n         * enabling the native refresher.\n         */\n        this.pullMin = 60;\n        /**\n         * The maximum distance of the pull until the refresher\n         * will automatically go into the `refreshing` state.\n         * Defaults to the result of `pullMin + 60`.\n         * Does not apply when  the refresher content uses a spinner,\n         * enabling the native refresher.\n         */\n        this.pullMax = this.pullMin + 60;\n        /**\n         * Time it takes to close the refresher.\n         * Does not apply when the refresher content uses a spinner,\n         * enabling the native refresher.\n         */\n        this.closeDuration = '280ms';\n        /**\n         * Time it takes the refresher to to snap back to the `refreshing` state.\n         * Does not apply when the refresher content uses a spinner,\n         * enabling the native refresher.\n         */\n        this.snapbackDuration = '280ms';\n        /**\n         * How much to multiply the pull speed by. To slow the pull animation down,\n         * pass a number less than `1`. To speed up the pull, pass a number greater\n         * than `1`. The default value is `1` which is equal to the speed of the cursor.\n         * If a negative value is passed in, the factor will be `1` instead.\n         *\n         * For example: If the value passed is `1.2` and the content is dragged by\n         * `10` pixels, instead of `10` pixels the content will be pulled by `12` pixels\n         * (an increase of 20 percent). If the value passed is `0.8`, the dragged amount\n         * will be `8` pixels, less than the amount the cursor has moved.\n         *\n         * Does not apply when the refresher content uses a spinner,\n         * enabling the native refresher.\n         */\n        this.pullFactor = 1;\n        /**\n         * If `true`, the refresher will be hidden.\n         */\n        this.disabled = false;\n        this.ionRefresh = createEvent(this, \"ionRefresh\", 7);\n        this.ionPull = createEvent(this, \"ionPull\", 7);\n        this.ionStart = createEvent(this, \"ionStart\", 7);\n    }\n    disabledChanged() {\n        if (this.gesture) {\n            this.gesture.enable(!this.disabled);\n        }\n    }\n    checkNativeRefresher() {\n        const useNativeRefresher = shouldUseNativeRefresher(this.el, getIonMode(this));\n        if (useNativeRefresher && !this.nativeRefresher) {\n            const contentEl = this.el.closest('ion-content');\n            this.setupNativeRefresher(contentEl);\n        }\n        else if (!useNativeRefresher) {\n            this.destroyNativeRefresher();\n        }\n    }\n    destroyNativeRefresher() {\n        if (this.scrollEl && this.scrollListenerCallback) {\n            this.scrollEl.removeEventListener('scroll', this.scrollListenerCallback);\n            this.scrollListenerCallback = undefined;\n        }\n        this.nativeRefresher = false;\n    }\n    async resetNativeRefresher(el, state) {\n        this.state = state;\n        if (getIonMode(this) === 'ios') {\n            await translateElement(el, undefined);\n        }\n        else {\n            await transitionEndAsync(this.el.querySelector('.refresher-refreshing-icon'), 200);\n        }\n        this.didRefresh = false;\n        this.needsCompletion = false;\n        this.pointerDown = false;\n        this.animations.forEach(ani => ani.destroy());\n        this.animations = [];\n        this.progress = 0;\n        this.state = 1 /* Inactive */;\n    }\n    async setupiOSNativeRefresher(pullingSpinner, refreshingSpinner) {\n        this.elementToTransform = this.scrollEl;\n        const ticks = pullingSpinner.shadowRoot.querySelectorAll('svg');\n        const MAX_PULL = this.scrollEl.clientHeight * 0.16;\n        const NUM_TICKS = ticks.length;\n        writeTask(() => ticks.forEach(el => el.style.setProperty('animation', 'none')));\n        this.scrollListenerCallback = () => {\n            // If pointer is not on screen or refresher is not active, ignore scroll\n            if (!this.pointerDown && this.state === 1 /* Inactive */) {\n                return;\n            }\n            readTask(() => {\n                // PTR should only be active when overflow scrolling at the top\n                const scrollTop = this.scrollEl.scrollTop;\n                const refresherHeight = this.el.clientHeight;\n                if (scrollTop > 0) {\n                    /**\n                     * If refresher is refreshing and user tries to scroll\n                     * progressively fade refresher out/in\n                     */\n                    if (this.state === 8 /* Refreshing */) {\n                        const ratio = clamp(0, scrollTop / (refresherHeight * 0.5), 1);\n                        writeTask(() => setSpinnerOpacity(refreshingSpinner, 1 - ratio));\n                        return;\n                    }\n                    writeTask(() => setSpinnerOpacity(pullingSpinner, 0));\n                    return;\n                }\n                if (this.pointerDown) {\n                    if (!this.didStart) {\n                        this.didStart = true;\n                        this.ionStart.emit();\n                    }\n                    // emit \"pulling\" on every move\n                    if (this.pointerDown) {\n                        this.ionPull.emit();\n                    }\n                }\n                // delay showing the next tick marks until user has pulled 30px\n                const opacity = clamp(0, Math.abs(scrollTop) / refresherHeight, 0.99);\n                const pullAmount = this.progress = clamp(0, (Math.abs(scrollTop) - 30) / MAX_PULL, 1);\n                const currentTickToShow = clamp(0, Math.floor(pullAmount * NUM_TICKS), NUM_TICKS - 1);\n                const shouldShowRefreshingSpinner = this.state === 8 /* Refreshing */ || currentTickToShow === NUM_TICKS - 1;\n                if (shouldShowRefreshingSpinner) {\n                    if (this.pointerDown) {\n                        handleScrollWhileRefreshing(refreshingSpinner, this.lastVelocityY);\n                    }\n                    if (!this.didRefresh) {\n                        this.beginRefresh();\n                        this.didRefresh = true;\n                        hapticImpact({ style: 'light' });\n                        /**\n                         * Translate the content element otherwise when pointer is removed\n                         * from screen the scroll content will bounce back over the refresher\n                         */\n                        if (!this.pointerDown) {\n                            translateElement(this.elementToTransform, `${refresherHeight}px`);\n                        }\n                    }\n                }\n                else {\n                    this.state = 2 /* Pulling */;\n                    handleScrollWhilePulling(pullingSpinner, ticks, opacity, currentTickToShow);\n                }\n            });\n        };\n        this.scrollEl.addEventListener('scroll', this.scrollListenerCallback);\n        this.gesture = (await import('./index-6f647ec8.js')).createGesture({\n            el: this.scrollEl,\n            gestureName: 'refresher',\n            gesturePriority: 10,\n            direction: 'y',\n            threshold: 5,\n            onStart: () => {\n                this.pointerDown = true;\n                if (!this.didRefresh) {\n                    translateElement(this.elementToTransform, '0px');\n                }\n            },\n            onMove: ev => {\n                this.lastVelocityY = ev.velocityY;\n            },\n            onEnd: () => {\n                this.pointerDown = false;\n                this.didStart = false;\n                if (this.needsCompletion) {\n                    this.resetNativeRefresher(this.elementToTransform, 32 /* Completing */);\n                    this.needsCompletion = false;\n                }\n                else if (this.didRefresh) {\n                    readTask(() => translateElement(this.elementToTransform, `${this.el.clientHeight}px`));\n                }\n            },\n        });\n        this.disabledChanged();\n    }\n    async setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner) {\n        const circle = getElementRoot(pullingSpinner).querySelector('circle');\n        const pullingRefresherIcon = this.el.querySelector('ion-refresher-content .refresher-pulling-icon');\n        const refreshingCircle = getElementRoot(refreshingSpinner).querySelector('circle');\n        if (circle !== null && refreshingCircle !== null) {\n            writeTask(() => {\n                circle.style.setProperty('animation', 'none');\n                // This lines up the animation on the refreshing spinner with the pulling spinner\n                refreshingSpinner.style.setProperty('animation-delay', '-655ms');\n                refreshingCircle.style.setProperty('animation-delay', '-655ms');\n            });\n        }\n        this.gesture = (await import('./index-6f647ec8.js')).createGesture({\n            el: this.scrollEl,\n            gestureName: 'refresher',\n            gesturePriority: 10,\n            direction: 'y',\n            threshold: 5,\n            canStart: () => this.state !== 8 /* Refreshing */ && this.state !== 32 /* Completing */ && this.scrollEl.scrollTop === 0,\n            onStart: (ev) => {\n                ev.data = { animation: undefined, didStart: false, cancelled: false };\n            },\n            onMove: (ev) => {\n                if ((ev.velocityY < 0 && this.progress === 0 && !ev.data.didStart) || ev.data.cancelled) {\n                    ev.data.cancelled = true;\n                    return;\n                }\n                if (!ev.data.didStart) {\n                    ev.data.didStart = true;\n                    this.state = 2 /* Pulling */;\n                    writeTask(() => {\n                        const animationType = getRefresherAnimationType(contentEl);\n                        const animation = createPullingAnimation(animationType, pullingRefresherIcon);\n                        ev.data.animation = animation;\n                        this.scrollEl.style.setProperty('--overflow', 'hidden');\n                        animation.progressStart(false, 0);\n                        this.ionStart.emit();\n                        this.animations.push(animation);\n                    });\n                    return;\n                }\n                // Since we are using an easing curve, slow the gesture tracking down a bit\n                this.progress = clamp(0, (ev.deltaY / 180) * 0.5, 1);\n                ev.data.animation.progressStep(this.progress);\n                this.ionPull.emit();\n            },\n            onEnd: (ev) => {\n                if (!ev.data.didStart) {\n                    return;\n                }\n                writeTask(() => this.scrollEl.style.removeProperty('--overflow'));\n                if (this.progress <= 0.4) {\n                    this.gesture.enable(false);\n                    ev.data.animation\n                        .progressEnd(0, this.progress, 500)\n                        .onFinish(() => {\n                        this.animations.forEach(ani => ani.destroy());\n                        this.animations = [];\n                        this.gesture.enable(true);\n                        this.state = 1 /* Inactive */;\n                    });\n                    return;\n                }\n                const progress = getTimeGivenProgression([0, 0], [0, 0], [1, 1], [1, 1], this.progress)[0];\n                const snapBackAnimation = createSnapBackAnimation(pullingRefresherIcon);\n                this.animations.push(snapBackAnimation);\n                writeTask(async () => {\n                    pullingRefresherIcon.style.setProperty('--ion-pulling-refresher-translate', `${(progress * 100)}px`);\n                    ev.data.animation.progressEnd();\n                    await snapBackAnimation.play();\n                    this.beginRefresh();\n                    ev.data.animation.destroy();\n                });\n            }\n        });\n        this.disabledChanged();\n    }\n    async setupNativeRefresher(contentEl) {\n        if (this.scrollListenerCallback || !contentEl || this.nativeRefresher || !this.scrollEl) {\n            return;\n        }\n        this.nativeRefresher = true;\n        const pullingSpinner = this.el.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n        const refreshingSpinner = this.el.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n        await contentEl.componentOnReady();\n        if (getIonMode(this) === 'ios') {\n            this.setupiOSNativeRefresher(pullingSpinner, refreshingSpinner);\n        }\n        else {\n            this.setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner);\n        }\n    }\n    componentDidUpdate() {\n        this.checkNativeRefresher();\n    }\n    async connectedCallback() {\n        if (this.el.getAttribute('slot') !== 'fixed') {\n            console.error('Make sure you use: <ion-refresher slot=\"fixed\">');\n            return;\n        }\n        const contentEl = this.el.closest('ion-content');\n        if (!contentEl) {\n            console.error('<ion-refresher> must be used inside an <ion-content>');\n            return;\n        }\n        this.scrollEl = await contentEl.getScrollElement();\n        this.backgroundContentEl = getElementRoot(contentEl).querySelector('#background-content');\n        if (shouldUseNativeRefresher(this.el, getIonMode(this))) {\n            this.setupNativeRefresher(contentEl);\n        }\n        else {\n            this.gesture = (await import('./index-6f647ec8.js')).createGesture({\n                el: contentEl,\n                gestureName: 'refresher',\n                gesturePriority: 10,\n                direction: 'y',\n                threshold: 20,\n                passive: false,\n                canStart: () => this.canStart(),\n                onStart: () => this.onStart(),\n                onMove: ev => this.onMove(ev),\n                onEnd: () => this.onEnd(),\n            });\n            this.disabledChanged();\n        }\n    }\n    disconnectedCallback() {\n        this.destroyNativeRefresher();\n        this.scrollEl = undefined;\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n    }\n    /**\n     * Call `complete()` when your async operation has completed.\n     * For example, the `refreshing` state is while the app is performing\n     * an asynchronous operation, such as receiving more data from an\n     * AJAX request. Once the data has been received, you then call this\n     * method to signify that the refreshing has completed and to close\n     * the refresher. This method also changes the refresher's state from\n     * `refreshing` to `completing`.\n     */\n    async complete() {\n        if (this.nativeRefresher) {\n            this.needsCompletion = true;\n            // Do not reset scroll el until user removes pointer from screen\n            if (!this.pointerDown) {\n                raf(() => raf(() => this.resetNativeRefresher(this.elementToTransform, 32 /* Completing */)));\n            }\n        }\n        else {\n            this.close(32 /* Completing */, '120ms');\n        }\n    }\n    /**\n     * Changes the refresher's state from `refreshing` to `cancelling`.\n     */\n    async cancel() {\n        if (this.nativeRefresher) {\n            // Do not reset scroll el until user removes pointer from screen\n            if (!this.pointerDown) {\n                raf(() => raf(() => this.resetNativeRefresher(this.elementToTransform, 16 /* Cancelling */)));\n            }\n        }\n        else {\n            this.close(16 /* Cancelling */, '');\n        }\n    }\n    /**\n     * A number representing how far down the user has pulled.\n     * The number `0` represents the user hasn't pulled down at all. The\n     * number `1`, and anything greater than `1`, represents that the user\n     * has pulled far enough down that when they let go then the refresh will\n     * happen. If they let go and the number is less than `1`, then the\n     * refresh will not happen, and the content will return to it's original\n     * position.\n     */\n    getProgress() {\n        return Promise.resolve(this.progress);\n    }\n    canStart() {\n        if (!this.scrollEl) {\n            return false;\n        }\n        if (this.state !== 1 /* Inactive */) {\n            return false;\n        }\n        // if the scrollTop is greater than zero then it's\n        // not possible to pull the content down yet\n        if (this.scrollEl.scrollTop > 0) {\n            return false;\n        }\n        return true;\n    }\n    onStart() {\n        this.progress = 0;\n        this.state = 1 /* Inactive */;\n    }\n    onMove(detail) {\n        if (!this.scrollEl) {\n            return;\n        }\n        // this method can get called like a bazillion times per second,\n        // so it's built to be as efficient as possible, and does its\n        // best to do any DOM read/writes only when absolutely necessary\n        // if multi-touch then get out immediately\n        const ev = detail.event;\n        if (ev.touches && ev.touches.length > 1) {\n            return;\n        }\n        // do nothing if it's actively refreshing\n        // or it's in the way of closing\n        // or this was never a startY\n        if ((this.state & 56 /* _BUSY_ */) !== 0) {\n            return;\n        }\n        const pullFactor = (Number.isNaN(this.pullFactor) || this.pullFactor < 0) ? 1 : this.pullFactor;\n        const deltaY = detail.deltaY * pullFactor;\n        // don't bother if they're scrolling up\n        // and have not already started dragging\n        if (deltaY <= 0) {\n            // the current Y is higher than the starting Y\n            // so they scrolled up enough to be ignored\n            this.progress = 0;\n            this.state = 1 /* Inactive */;\n            if (this.appliedStyles) {\n                // reset the styles only if they were applied\n                this.setCss(0, '', false, '');\n                return;\n            }\n            return;\n        }\n        if (this.state === 1 /* Inactive */) {\n            // this refresh is not already actively pulling down\n            // get the content's scrollTop\n            const scrollHostScrollTop = this.scrollEl.scrollTop;\n            // if the scrollTop is greater than zero then it's\n            // not possible to pull the content down yet\n            if (scrollHostScrollTop > 0) {\n                this.progress = 0;\n                return;\n            }\n            // content scrolled all the way to the top, and dragging down\n            this.state = 2 /* Pulling */;\n        }\n        // prevent native scroll events\n        if (ev.cancelable) {\n            ev.preventDefault();\n        }\n        // the refresher is actively pulling at this point\n        // move the scroll element within the content element\n        this.setCss(deltaY, '0ms', true, '');\n        if (deltaY === 0) {\n            // don't continue if there's no delta yet\n            this.progress = 0;\n            return;\n        }\n        const pullMin = this.pullMin;\n        // set pull progress\n        this.progress = deltaY / pullMin;\n        // emit \"start\" if it hasn't started yet\n        if (!this.didStart) {\n            this.didStart = true;\n            this.ionStart.emit();\n        }\n        // emit \"pulling\" on every move\n        this.ionPull.emit();\n        // do nothing if the delta is less than the pull threshold\n        if (deltaY < pullMin) {\n            // ensure it stays in the pulling state, cuz its not ready yet\n            this.state = 2 /* Pulling */;\n            return;\n        }\n        if (deltaY > this.pullMax) {\n            // they pulled farther than the max, so kick off the refresh\n            this.beginRefresh();\n            return;\n        }\n        // pulled farther than the pull min!!\n        // it is now in the `ready` state!!\n        // if they let go then it'll refresh, kerpow!!\n        this.state = 4 /* Ready */;\n        return;\n    }\n    onEnd() {\n        // only run in a zone when absolutely necessary\n        if (this.state === 4 /* Ready */) {\n            // they pulled down far enough, so it's ready to refresh\n            this.beginRefresh();\n        }\n        else if (this.state === 2 /* Pulling */) {\n            // they were pulling down, but didn't pull down far enough\n            // set the content back to it's original location\n            // and close the refresher\n            // set that the refresh is actively cancelling\n            this.cancel();\n        }\n    }\n    beginRefresh() {\n        // assumes we're already back in a zone\n        // they pulled down far enough, so it's ready to refresh\n        this.state = 8 /* Refreshing */;\n        // place the content in a hangout position while it thinks\n        this.setCss(this.pullMin, this.snapbackDuration, true, '');\n        // emit \"refresh\" because it was pulled down far enough\n        // and they let go to begin refreshing\n        this.ionRefresh.emit({\n            complete: this.complete.bind(this)\n        });\n    }\n    close(state, delay) {\n        // create fallback timer incase something goes wrong with transitionEnd event\n        setTimeout(() => {\n            this.state = 1 /* Inactive */;\n            this.progress = 0;\n            this.didStart = false;\n            this.setCss(0, '0ms', false, '');\n        }, 600);\n        // reset set the styles on the scroll element\n        // set that the refresh is actively cancelling/completing\n        this.state = state;\n        this.setCss(0, this.closeDuration, true, delay);\n        // TODO: stop gesture\n    }\n    setCss(y, duration, overflowVisible, delay) {\n        if (this.nativeRefresher) {\n            return;\n        }\n        this.appliedStyles = (y > 0);\n        writeTask(() => {\n            if (this.scrollEl && this.backgroundContentEl) {\n                const scrollStyle = this.scrollEl.style;\n                const backgroundStyle = this.backgroundContentEl.style;\n                scrollStyle.transform = backgroundStyle.transform = ((y > 0) ? `translateY(${y}px) translateZ(0px)` : '');\n                scrollStyle.transitionDuration = backgroundStyle.transitionDuration = duration;\n                scrollStyle.transitionDelay = backgroundStyle.transitionDelay = delay;\n                scrollStyle.overflow = (overflowVisible ? 'hidden' : '');\n            }\n        });\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { slot: \"fixed\", class: {\n                [mode]: true,\n                // Used internally for styling\n                [`refresher-${mode}`]: true,\n                'refresher-native': this.nativeRefresher,\n                'refresher-active': this.state !== 1 /* Inactive */,\n                'refresher-pulling': this.state === 2 /* Pulling */,\n                'refresher-ready': this.state === 4 /* Ready */,\n                'refresher-refreshing': this.state === 8 /* Refreshing */,\n                'refresher-cancelling': this.state === 16 /* Cancelling */,\n                'refresher-completing': this.state === 32 /* Completing */,\n            } }));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"disabled\": [\"disabledChanged\"]\n    }; }\n};\nRefresher.style = {\n    /*STENCIL:MODE:ios*/ ios: refresherIosCss,\n    /*STENCIL:MODE:md*/ md: refresherMdCss\n};\n\nconst RefresherContent = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    componentWillLoad() {\n        if (this.pullingIcon === undefined) {\n            const mode = getIonMode(this);\n            const overflowRefresher = this.el.style.webkitOverflowScrolling !== undefined ? 'lines' : 'arrow-down';\n            this.pullingIcon = config.get('refreshingIcon', mode === 'ios' && isPlatform('mobile') ? config.get('spinner', overflowRefresher) : 'circular');\n        }\n        if (this.refreshingSpinner === undefined) {\n            const mode = getIonMode(this);\n            this.refreshingSpinner = config.get('refreshingSpinner', config.get('spinner', mode === 'ios' ? 'lines' : 'circular'));\n        }\n    }\n    render() {\n        const pullingIcon = this.pullingIcon;\n        const hasSpinner = pullingIcon != null && SPINNERS[pullingIcon] !== undefined;\n        const mode = getIonMode(this);\n        return (h(Host, { class: mode }, h(\"div\", { class: \"refresher-pulling\" }, this.pullingIcon && hasSpinner &&\n            h(\"div\", { class: \"refresher-pulling-icon\" }, h(\"div\", { class: \"spinner-arrow-container\" }, h(\"ion-spinner\", { name: this.pullingIcon, paused: true }), mode === 'md' && this.pullingIcon === 'circular' &&\n                h(\"div\", { class: \"arrow-container\" }, h(\"ion-icon\", { name: \"caret-back-sharp\" })))), this.pullingIcon && !hasSpinner &&\n            h(\"div\", { class: \"refresher-pulling-icon\" }, h(\"ion-icon\", { icon: this.pullingIcon, lazy: false })), this.pullingText &&\n            h(\"div\", { class: \"refresher-pulling-text\", innerHTML: sanitizeDOMString(this.pullingText) })), h(\"div\", { class: \"refresher-refreshing\" }, this.refreshingSpinner &&\n            h(\"div\", { class: \"refresher-refreshing-icon\" }, h(\"ion-spinner\", { name: this.refreshingSpinner })), this.refreshingText &&\n            h(\"div\", { class: \"refresher-refreshing-text\", innerHTML: sanitizeDOMString(this.refreshingText) }))));\n    }\n    get el() { return getElement(this); }\n};\n\nexport { Refresher as ion_refresher, RefresherContent as ion_refresher_content };\n"],"sourceRoot":"webpack:///","file":"49-es5.js"}