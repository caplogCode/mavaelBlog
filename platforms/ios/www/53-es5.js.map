{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-ripple-effect.entry.js"],"names":[],"mappings":"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","sourcesContent":["import { r as registerInstance, f as readTask, w as writeTask, h, e as getElement, H as Host } from './index-e23c3ffd.js';\nimport { b as getIonMode } from './ionic-global-fbc9a2ac.js';\n\nconst rippleEffectCss = \":host{left:0;right:0;top:0;bottom:0;position:absolute;contain:strict;pointer-events:none}:host(.unbounded){contain:layout size style}.ripple-effect{border-radius:50%;position:absolute;background-color:currentColor;color:inherit;contain:strict;opacity:0;-webkit-animation:225ms rippleAnimation forwards, 75ms fadeInAnimation forwards;animation:225ms rippleAnimation forwards, 75ms fadeInAnimation forwards;will-change:transform, opacity;pointer-events:none}.fade-out{-webkit-transform:translate(var(--translate-end)) scale(var(--final-scale, 1));transform:translate(var(--translate-end)) scale(var(--final-scale, 1));-webkit-animation:150ms fadeOutAnimation forwards;animation:150ms fadeOutAnimation forwards}@-webkit-keyframes rippleAnimation{from{-webkit-animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);-webkit-transform:scale(1);transform:scale(1)}to{-webkit-transform:translate(var(--translate-end)) scale(var(--final-scale, 1));transform:translate(var(--translate-end)) scale(var(--final-scale, 1))}}@keyframes rippleAnimation{from{-webkit-animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);-webkit-transform:scale(1);transform:scale(1)}to{-webkit-transform:translate(var(--translate-end)) scale(var(--final-scale, 1));transform:translate(var(--translate-end)) scale(var(--final-scale, 1))}}@-webkit-keyframes fadeInAnimation{from{-webkit-animation-timing-function:linear;animation-timing-function:linear;opacity:0}to{opacity:0.16}}@keyframes fadeInAnimation{from{-webkit-animation-timing-function:linear;animation-timing-function:linear;opacity:0}to{opacity:0.16}}@-webkit-keyframes fadeOutAnimation{from{-webkit-animation-timing-function:linear;animation-timing-function:linear;opacity:0.16}to{opacity:0}}@keyframes fadeOutAnimation{from{-webkit-animation-timing-function:linear;animation-timing-function:linear;opacity:0.16}to{opacity:0}}\";\n\nconst RippleEffect = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * Sets the type of ripple-effect:\n         *\n         * - `bounded`: the ripple effect expands from the user's click position\n         * - `unbounded`: the ripple effect expands from the center of the button and overflows the container.\n         *\n         * NOTE: Surfaces for bounded ripples should have the overflow property set to hidden,\n         * while surfaces for unbounded ripples should have it set to visible.\n         */\n        this.type = 'bounded';\n    }\n    /**\n     * Adds the ripple effect to the parent element.\n     *\n     * @param x The horizontal coordinate of where the ripple should start.\n     * @param y The vertical coordinate of where the ripple should start.\n     */\n    async addRipple(x, y) {\n        return new Promise(resolve => {\n            readTask(() => {\n                const rect = this.el.getBoundingClientRect();\n                const width = rect.width;\n                const height = rect.height;\n                const hypotenuse = Math.sqrt(width * width + height * height);\n                const maxDim = Math.max(height, width);\n                const maxRadius = this.unbounded ? maxDim : hypotenuse + PADDING;\n                const initialSize = Math.floor(maxDim * INITIAL_ORIGIN_SCALE);\n                const finalScale = maxRadius / initialSize;\n                let posX = x - rect.left;\n                let posY = y - rect.top;\n                if (this.unbounded) {\n                    posX = width * 0.5;\n                    posY = height * 0.5;\n                }\n                const styleX = posX - initialSize * 0.5;\n                const styleY = posY - initialSize * 0.5;\n                const moveX = width * 0.5 - posX;\n                const moveY = height * 0.5 - posY;\n                writeTask(() => {\n                    const div = document.createElement('div');\n                    div.classList.add('ripple-effect');\n                    const style = div.style;\n                    style.top = styleY + 'px';\n                    style.left = styleX + 'px';\n                    style.width = style.height = initialSize + 'px';\n                    style.setProperty('--final-scale', `${finalScale}`);\n                    style.setProperty('--translate-end', `${moveX}px, ${moveY}px`);\n                    const container = this.el.shadowRoot || this.el;\n                    container.appendChild(div);\n                    setTimeout(() => {\n                        resolve(() => {\n                            removeRipple(div);\n                        });\n                    }, 225 + 100);\n                });\n            });\n        });\n    }\n    get unbounded() {\n        return this.type === 'unbounded';\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { role: \"presentation\", class: {\n                [mode]: true,\n                'unbounded': this.unbounded\n            } }));\n    }\n    get el() { return getElement(this); }\n};\nconst removeRipple = (ripple) => {\n    ripple.classList.add('fade-out');\n    setTimeout(() => {\n        ripple.remove();\n    }, 200);\n};\nconst PADDING = 10;\nconst INITIAL_ORIGIN_SCALE = 0.5;\nRippleEffect.style = rippleEffectCss;\n\nexport { RippleEffect as ion_ripple_effect };\n"],"sourceRoot":"webpack:///","file":"53-es5.js"}