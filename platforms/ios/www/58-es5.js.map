{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-segment_2-md.entry.js"],"names":[],"mappings":"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","sourcesContent":["import { r as registerInstance, d as createEvent, w as writeTask, h, H as Host, e as getElement } from './index-e23c3ffd.js';\nimport { c as config, b as getIonMode } from './ionic-global-fbc9a2ac.js';\nimport { p as pointerCoord } from './helpers-5c745fbd.js';\nimport { c as createColorClasses, h as hostContext } from './theme-c2dc54d9.js';\n\nconst segmentIosCss = \":host{--ripple-color:currentColor;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:center;justify-content:center;width:100%;background:var(--background);font-family:var(--ion-font-family, inherit);text-align:center;contain:paint}:host(.segment-scrollable){-ms-flex-pack:start;justify-content:start;width:auto;overflow-x:auto}:host(.segment-scrollable::-webkit-scrollbar){display:none}:host{--background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.065);border-radius:8px;overflow:hidden;z-index:0}:host(.ion-color){background:rgba(var(--ion-color-base-rgb), 0.065)}:host(.in-toolbar){margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;width:auto}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-toolbar){margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}:host(.in-toolbar:not(.ion-color)){background:var(--ion-toolbar-segment-background, var(--background))}:host(.in-toolbar-color:not(.ion-color)){background:rgba(var(--ion-color-contrast-rgb), 0.11)}\";\n\nconst segmentMdCss = \":host{--ripple-color:currentColor;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:center;justify-content:center;width:100%;background:var(--background);font-family:var(--ion-font-family, inherit);text-align:center;contain:paint}:host(.segment-scrollable){-ms-flex-pack:start;justify-content:start;width:auto;overflow-x:auto}:host(.segment-scrollable::-webkit-scrollbar){display:none}:host{--background:transparent}:host(.segment-scrollable) ::slotted(ion-segment-button){min-width:auto}\";\n\nconst Segment = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.didInit = false;\n        this.activated = false;\n        /**\n         * If `true`, the user cannot interact with the segment.\n         */\n        this.disabled = false;\n        /**\n         * If `true`, the segment buttons will overflow and the user can swipe to see them.\n         * In addition, this will disable the gesture to drag the indicator between the buttons\n         * in order to swipe to see hidden buttons.\n         */\n        this.scrollable = false;\n        this.onClick = (ev) => {\n            const current = ev.target;\n            const previous = this.checked;\n            this.value = current.value;\n            if (previous && this.scrollable) {\n                this.checkButton(previous, current);\n            }\n            this.checked = current;\n        };\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionSelect = createEvent(this, \"ionSelect\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    }\n    valueChanged(value, oldValue) {\n        this.ionSelect.emit({ value });\n        if (oldValue !== '' || this.didInit) {\n            if (!this.activated) {\n                this.ionChange.emit({ value });\n            }\n            else {\n                this.valueAfterGesture = value;\n            }\n        }\n    }\n    disabledChanged() {\n        this.gestureChanged();\n        const buttons = this.getButtons();\n        for (const button of buttons) {\n            button.disabled = this.disabled;\n        }\n    }\n    gestureChanged() {\n        if (this.gesture && !this.scrollable) {\n            this.gesture.enable(!this.disabled);\n        }\n    }\n    connectedCallback() {\n        this.emitStyle();\n    }\n    componentWillLoad() {\n        this.emitStyle();\n    }\n    async componentDidLoad() {\n        this.setCheckedClasses();\n        this.gesture = (await import('./index-6f647ec8.js')).createGesture({\n            el: this.el,\n            gestureName: 'segment',\n            gesturePriority: 100,\n            threshold: 0,\n            passive: false,\n            onStart: ev => this.onStart(ev),\n            onMove: ev => this.onMove(ev),\n            onEnd: ev => this.onEnd(ev),\n        });\n        this.gesture.enable(!this.scrollable);\n        this.gestureChanged();\n        if (this.disabled) {\n            this.disabledChanged();\n        }\n        this.didInit = true;\n    }\n    onStart(detail) {\n        this.activate(detail);\n    }\n    onMove(detail) {\n        this.setNextIndex(detail);\n    }\n    onEnd(detail) {\n        this.setActivated(false);\n        const checkedValidButton = this.setNextIndex(detail, true);\n        detail.event.stopImmediatePropagation();\n        if (checkedValidButton) {\n            this.addRipple(detail);\n        }\n        const value = this.valueAfterGesture;\n        if (value !== undefined) {\n            this.ionChange.emit({ value });\n            this.valueAfterGesture = undefined;\n        }\n    }\n    getButtons() {\n        return Array.from(this.el.querySelectorAll('ion-segment-button'));\n    }\n    /**\n     * The gesture blocks the segment button ripple. This\n     * function adds the ripple based on the checked segment\n     * and where the cursor ended.\n     */\n    addRipple(detail) {\n        const useRippleEffect = config.getBoolean('animated', true) && config.getBoolean('rippleEffect', true);\n        if (!useRippleEffect) {\n            return;\n        }\n        const buttons = this.getButtons();\n        const checked = buttons.find(button => button.value === this.value);\n        const root = checked.shadowRoot || checked;\n        const ripple = root.querySelector('ion-ripple-effect');\n        if (!ripple) {\n            return;\n        }\n        const { x, y } = pointerCoord(detail.event);\n        ripple.addRipple(x, y).then(remove => remove());\n    }\n    /*\n     * Activate both the segment and the buttons\n     * due to a bug with ::slotted in Safari\n     */\n    setActivated(activated) {\n        const buttons = this.getButtons();\n        buttons.forEach(button => {\n            if (activated) {\n                button.classList.add('segment-button-activated');\n            }\n            else {\n                button.classList.remove('segment-button-activated');\n            }\n        });\n        this.activated = activated;\n    }\n    activate(detail) {\n        const clicked = detail.event.target;\n        const buttons = this.getButtons();\n        const checked = buttons.find(button => button.value === this.value);\n        // Make sure we are only checking for activation on a segment button\n        // since disabled buttons will get the click on the segment\n        if (clicked.tagName !== 'ION-SEGMENT-BUTTON') {\n            return;\n        }\n        // If there are no checked buttons, set the current button to checked\n        if (!checked) {\n            this.value = clicked.value;\n        }\n        // If the gesture began on the clicked button with the indicator\n        // then we should activate the indicator\n        if (this.value === clicked.value) {\n            this.setActivated(true);\n        }\n    }\n    getIndicator(button) {\n        const root = button.shadowRoot || button;\n        return root.querySelector('.segment-button-indicator');\n    }\n    checkButton(previous, current) {\n        const previousIndicator = this.getIndicator(previous);\n        const currentIndicator = this.getIndicator(current);\n        if (previousIndicator === null || currentIndicator === null) {\n            return;\n        }\n        const previousClientRect = previousIndicator.getBoundingClientRect();\n        const currentClientRect = currentIndicator.getBoundingClientRect();\n        const widthDelta = previousClientRect.width / currentClientRect.width;\n        const xPosition = previousClientRect.left - currentClientRect.left;\n        // Scale the indicator width to match the previous indicator width\n        // and translate it on top of the previous indicator\n        const transform = `translate3d(${xPosition}px, 0, 0) scaleX(${widthDelta})`;\n        writeTask(() => {\n            // Remove the transition before positioning on top of the previous indicator\n            currentIndicator.classList.remove('segment-button-indicator-animated');\n            currentIndicator.style.setProperty('transform', transform);\n            // Force a repaint to ensure the transform happens\n            currentIndicator.getBoundingClientRect();\n            // Add the transition to move the indicator into place\n            currentIndicator.classList.add('segment-button-indicator-animated');\n            // Remove the transform to slide the indicator back to the button clicked\n            currentIndicator.style.setProperty('transform', '');\n        });\n        this.value = current.value;\n        this.setCheckedClasses();\n    }\n    setCheckedClasses() {\n        const buttons = this.getButtons();\n        const index = buttons.findIndex(button => button.value === this.value);\n        const next = index + 1;\n        // Keep track of the currently checked button\n        this.checked = buttons.find(button => button.value === this.value);\n        for (const button of buttons) {\n            button.classList.remove('segment-button-after-checked');\n        }\n        if (next < buttons.length) {\n            buttons[next].classList.add('segment-button-after-checked');\n        }\n    }\n    setNextIndex(detail, isEnd = false) {\n        const isRTL = document.dir === 'rtl';\n        const activated = this.activated;\n        const buttons = this.getButtons();\n        const index = buttons.findIndex(button => button.value === this.value);\n        const previous = buttons[index];\n        let current;\n        let nextIndex;\n        if (index === -1) {\n            return;\n        }\n        // Get the element that the touch event started on in case\n        // it was the checked button, then we will move the indicator\n        const rect = previous.getBoundingClientRect();\n        const left = rect.left;\n        const width = rect.width;\n        // Get the element that the gesture is on top of based on the currentX of the\n        // gesture event and the Y coordinate of the starting element, since the gesture\n        // can move up and down off of the segment\n        const currentX = detail.currentX;\n        const previousY = rect.top + (rect.height / 2);\n        const nextEl = document.elementFromPoint(currentX, previousY);\n        const decreaseIndex = isRTL ? currentX > (left + width) : currentX < left;\n        const increaseIndex = isRTL ? currentX < left : currentX > (left + width);\n        // If the indicator is currently activated then we have started the gesture\n        // on top of the checked button so we need to slide the indicator\n        // by checking the button next to it as we move\n        if (activated && !isEnd) {\n            // Decrease index, move left in LTR & right in RTL\n            if (decreaseIndex) {\n                const newIndex = index - 1;\n                if (newIndex >= 0) {\n                    nextIndex = newIndex;\n                }\n                // Increase index, moves right in LTR & left in RTL\n            }\n            else if (increaseIndex) {\n                if (activated && !isEnd) {\n                    const newIndex = index + 1;\n                    if (newIndex < buttons.length) {\n                        nextIndex = newIndex;\n                    }\n                }\n            }\n            if (nextIndex !== undefined && !buttons[nextIndex].disabled) {\n                current = buttons[nextIndex];\n            }\n        }\n        // If the indicator is not activated then we will just set the indicator\n        // to the element where the gesture ended\n        if (!activated && isEnd) {\n            current = nextEl;\n        }\n        /* tslint:disable-next-line */\n        if (current != null) {\n            /**\n             * If current element is ion-segment then that means\n             * user tried to select a disabled ion-segment-button,\n             * and we should not update the ripple.\n             */\n            if (current.tagName === 'ION-SEGMENT') {\n                return false;\n            }\n            if (previous !== current) {\n                this.checkButton(previous, current);\n            }\n        }\n        return true;\n    }\n    emitStyle() {\n        this.ionStyle.emit({\n            'segment': true\n        });\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { onClick: this.onClick, class: Object.assign(Object.assign({}, createColorClasses(this.color)), { [mode]: true, 'in-toolbar': hostContext('ion-toolbar', this.el), 'in-toolbar-color': hostContext('ion-toolbar[color]', this.el), 'segment-activated': this.activated, 'segment-disabled': this.disabled, 'segment-scrollable': this.scrollable }) }, h(\"slot\", null)));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"value\": [\"valueChanged\"],\n        \"disabled\": [\"disabledChanged\"]\n    }; }\n};\nSegment.style = {\n    /*STENCIL:MODE:ios*/ ios: segmentIosCss,\n    /*STENCIL:MODE:md*/ md: segmentMdCss\n};\n\nconst segmentButtonIosCss = \":host{--color:initial;--color-hover:var(--color);--color-checked:var(--color);--color-disabled:var(--color);--padding-start:0;--padding-end:0;--padding-top:0;--padding-bottom:0;border-radius:var(--border-radius);display:-ms-flexbox;display:flex;position:relative;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-direction:column;flex-direction:column;height:auto;background:var(--background);color:var(--color);text-decoration:none;text-overflow:ellipsis;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none;cursor:pointer}.button-native{border-radius:0;font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:var(--margin-start);margin-right:var(--margin-end);margin-top:var(--margin-top);margin-bottom:var(--margin-bottom);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0);display:-ms-flexbox;display:flex;position:relative;-ms-flex-direction:inherit;flex-direction:inherit;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;min-width:inherit;max-width:inherit;height:auto;min-height:inherit;max-height:inherit;-webkit-transition:var(--transition);transition:var(--transition);border:none;outline:none;background:transparent;contain:content;pointer-events:none;overflow:hidden;z-index:2}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{margin-left:unset;margin-right:unset;-webkit-margin-start:var(--margin-start);margin-inline-start:var(--margin-start);-webkit-margin-end:var(--margin-end);margin-inline-end:var(--margin-end)}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:inherit;flex-flow:inherit;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}:host(.segment-button-checked){background:var(--background-checked);color:var(--color-checked)}:host(.segment-button-disabled){cursor:default;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity)}:host(.segment-button-checked:hover) .button-native{color:var(--color-checked)}}::slotted(ion-icon){-ms-flex-negative:0;flex-shrink:0;-ms-flex-order:-1;order:-1;pointer-events:none}::slotted(ion-label){display:block;-ms-flex-item-align:center;align-self:center;line-height:22px;text-overflow:ellipsis;white-space:nowrap;-webkit-box-sizing:border-box;box-sizing:border-box;pointer-events:none}:host(.segment-button-layout-icon-top) .button-native{-ms-flex-direction:column;flex-direction:column}:host(.segment-button-layout-icon-start) .button-native{-ms-flex-direction:row;flex-direction:row}:host(.segment-button-layout-icon-end) .button-native{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.segment-button-layout-icon-bottom) .button-native{-ms-flex-direction:column-reverse;flex-direction:column-reverse}:host(.segment-button-layout-icon-hide) ::slotted(ion-icon){display:none}:host(.segment-button-layout-label-hide) ::slotted(ion-label){display:none}ion-ripple-effect{color:var(--ripple-color, var(--color-checked))}.segment-button-indicator{-webkit-transform-origin:left;transform-origin:left;position:absolute;opacity:0;-webkit-box-sizing:border-box;box-sizing:border-box;will-change:transform, opacity;pointer-events:none}.segment-button-indicator-background{width:100%;height:var(--indicator-height);-webkit-transform:var(--indicator-transform);transform:var(--indicator-transform);-webkit-box-shadow:var(--indicator-box-shadow);box-shadow:var(--indicator-box-shadow);pointer-events:none}.segment-button-indicator-animated{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked) .segment-button-indicator{opacity:1}@media (prefers-reduced-motion: reduce){.segment-button-indicator-background{-webkit-transform:none;transform:none}.segment-button-indicator-animated{-webkit-transition:none;transition:none}}:host{--background:none;--background-checked:none;--background-hover:none;--background-hover-opacity:0;--background-focused:none;--background-focused-opacity:0;--border-radius:7px;--border-width:1px;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.12);--border-style:solid;--indicator-box-shadow:0 0 5px rgba(0, 0, 0, 0.16);--indicator-color:var(--ion-color-step-350, var(--ion-background-color, #fff));--indicator-height:100%;--indicator-transition:transform 260ms cubic-bezier(0.4, 0, 0.2, 1);--indicator-transform:none;--transition:100ms all linear;--padding-top:0;--padding-end:13px;--padding-bottom:0;--padding-start:13px;margin-top:2px;margin-bottom:2px;position:relative;-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-direction:row;flex-direction:row;min-width:70px;min-height:28px;-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0);font-size:13px;font-weight:450;line-height:37px}:host::before{margin-left:0;margin-right:0;margin-top:5px;margin-bottom:5px;-webkit-transition:160ms opacity ease-in-out;transition:160ms opacity ease-in-out;-webkit-transition-delay:100ms;transition-delay:100ms;border-left:var(--border-width) var(--border-style) var(--border-color);content:\\\"\\\";opacity:1;will-change:opacity}:host(:first-of-type)::before{border-left-color:transparent}:host(.segment-button-disabled){opacity:0.3}::slotted(ion-icon){font-size:24px}:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:2px;margin-right:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:0;margin-inline-end:0}}:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:0;margin-right:2px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:2px;margin-inline-end:2px}}.segment-button-indicator{padding-left:2px;padding-right:2px;left:0;right:0;top:0;bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.segment-button-indicator{padding-left:unset;padding-right:unset;-webkit-padding-start:2px;padding-inline-start:2px;-webkit-padding-end:2px;padding-inline-end:2px}}.segment-button-indicator-background{border-radius:var(--border-radius);background:var(--indicator-color)}.segment-button-indicator-background{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked)::before,:host(.segment-button-after-checked)::before{opacity:0}:host(.segment-button-checked){z-index:-1}:host(.segment-button-activated){--indicator-transform:scale(0.95)}:host(.ion-focused) .button-native{opacity:0.7}@media (any-hover: hover){:host(:hover) .button-native{opacity:0.5}:host(.segment-button-checked:hover) .button-native{opacity:1}}:host(.in-segment-color){background:none;color:var(--ion-text-color, #000)}:host(.in-segment-color) .segment-button-indicator-background{background:var(--ion-color-step-350, var(--ion-background-color, #fff))}@media (any-hover: hover){:host(.in-segment-color:hover) .button-native,:host(.in-segment-color.segment-button-checked:hover) .button-native{color:var(--ion-text-color, #000)}}:host(.in-toolbar:not(.in-segment-color)){--background-checked:var(--ion-toolbar-segment-background-checked, none);--color:var(--ion-toolbar-segment-color, var(--ion-toolbar-color), initial);--color-checked:var(--ion-toolbar-segment-color-checked, var(--ion-toolbar-color), initial);--indicator-color:var(--ion-toolbar-segment-indicator-color, var(--ion-color-step-350, var(--ion-background-color, #fff)))}:host(.in-toolbar-color) .segment-button-indicator-background{background:#fff}:host(.in-toolbar-color:not(.in-segment-color)) .button-native{color:var(--ion-color-contrast)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color)) .button-native{color:var(--ion-color-base)}@media (any-hover: hover){:host(.in-toolbar-color:not(.in-segment-color):hover) .button-native{color:var(--ion-color-contrast)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color):hover) .button-native{color:var(--ion-color-base)}}\";\n\nconst segmentButtonMdCss = \":host{--color:initial;--color-hover:var(--color);--color-checked:var(--color);--color-disabled:var(--color);--padding-start:0;--padding-end:0;--padding-top:0;--padding-bottom:0;border-radius:var(--border-radius);display:-ms-flexbox;display:flex;position:relative;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-direction:column;flex-direction:column;height:auto;background:var(--background);color:var(--color);text-decoration:none;text-overflow:ellipsis;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none;cursor:pointer}.button-native{border-radius:0;font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:var(--margin-start);margin-right:var(--margin-end);margin-top:var(--margin-top);margin-bottom:var(--margin-bottom);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0);display:-ms-flexbox;display:flex;position:relative;-ms-flex-direction:inherit;flex-direction:inherit;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;min-width:inherit;max-width:inherit;height:auto;min-height:inherit;max-height:inherit;-webkit-transition:var(--transition);transition:var(--transition);border:none;outline:none;background:transparent;contain:content;pointer-events:none;overflow:hidden;z-index:2}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{margin-left:unset;margin-right:unset;-webkit-margin-start:var(--margin-start);margin-inline-start:var(--margin-start);-webkit-margin-end:var(--margin-end);margin-inline-end:var(--margin-end)}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:inherit;flex-flow:inherit;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}:host(.segment-button-checked){background:var(--background-checked);color:var(--color-checked)}:host(.segment-button-disabled){cursor:default;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity)}:host(.segment-button-checked:hover) .button-native{color:var(--color-checked)}}::slotted(ion-icon){-ms-flex-negative:0;flex-shrink:0;-ms-flex-order:-1;order:-1;pointer-events:none}::slotted(ion-label){display:block;-ms-flex-item-align:center;align-self:center;line-height:22px;text-overflow:ellipsis;white-space:nowrap;-webkit-box-sizing:border-box;box-sizing:border-box;pointer-events:none}:host(.segment-button-layout-icon-top) .button-native{-ms-flex-direction:column;flex-direction:column}:host(.segment-button-layout-icon-start) .button-native{-ms-flex-direction:row;flex-direction:row}:host(.segment-button-layout-icon-end) .button-native{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.segment-button-layout-icon-bottom) .button-native{-ms-flex-direction:column-reverse;flex-direction:column-reverse}:host(.segment-button-layout-icon-hide) ::slotted(ion-icon){display:none}:host(.segment-button-layout-label-hide) ::slotted(ion-label){display:none}ion-ripple-effect{color:var(--ripple-color, var(--color-checked))}.segment-button-indicator{-webkit-transform-origin:left;transform-origin:left;position:absolute;opacity:0;-webkit-box-sizing:border-box;box-sizing:border-box;will-change:transform, opacity;pointer-events:none}.segment-button-indicator-background{width:100%;height:var(--indicator-height);-webkit-transform:var(--indicator-transform);transform:var(--indicator-transform);-webkit-box-shadow:var(--indicator-box-shadow);box-shadow:var(--indicator-box-shadow);pointer-events:none}.segment-button-indicator-animated{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked) .segment-button-indicator{opacity:1}@media (prefers-reduced-motion: reduce){.segment-button-indicator-background{-webkit-transform:none;transform:none}.segment-button-indicator-animated{-webkit-transition:none;transition:none}}:host{--background:none;--background-checked:none;--background-hover:var(--color-checked);--background-focused:var(--color-checked);--background-activated-opacity:0;--background-focused-opacity:.12;--background-hover-opacity:.04;--color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6);--color-checked:var(--ion-color-primary, #3880ff);--indicator-box-shadow:none;--indicator-color:var(--color-checked);--indicator-height:2px;--indicator-transition:transform 250ms cubic-bezier(0.4, 0, 0.2, 1);--indicator-transform:none;--padding-top:0;--padding-end:16px;--padding-bottom:0;--padding-start:16px;--transition:color 0.15s linear 0s, opacity 0.15s linear 0s;min-width:90px;max-width:360px;min-height:48px;border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);font-size:14px;font-weight:500;letter-spacing:0.06em;line-height:40px;text-transform:uppercase}.button-native{min-width:90px}:host(.segment-button-disabled){opacity:0.3}:host(.in-segment-color){background:none;color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6)}:host(.in-segment-color) ion-ripple-effect{color:var(--ion-color-base)}:host(.in-segment-color) .segment-button-indicator-background{background:var(--ion-color-base)}:host(.in-segment-color.segment-button-checked) .button-native{color:var(--ion-color-base)}:host(.in-segment-color.ion-focused) .button-native::after{background:var(--ion-color-base)}@media (any-hover: hover){:host(.in-segment-color:hover) .button-native{color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6)}:host(.in-segment-color:hover) .button-native::after{background:var(--ion-color-base)}:host(.in-segment-color.segment-button-checked:hover) .button-native{color:var(--ion-color-base)}}:host(.in-toolbar:not(.in-segment-color)){--background:var(--ion-toolbar-segment-background, none);--background-checked:var(--ion-toolbar-segment-background-checked, none);--color:var(--ion-toolbar-segment-color, rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6));--color-checked:var(--ion-toolbar-segment-color-checked, var(--ion-color-primary, #3880ff));--indicator-color:var(--ion-toolbar-segment-color-checked, var(--color-checked))}:host(.in-toolbar-color:not(.in-segment-color)) .button-native{color:rgba(var(--ion-color-contrast-rgb), 0.6)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color)) .button-native{color:var(--ion-color-contrast)}@media (any-hover: hover){:host(.in-toolbar-color:not(.in-segment-color)) .button-native::after{background:var(--ion-color-contrast)}}::slotted(ion-icon){margin-top:12px;margin-bottom:12px;font-size:24px}::slotted(ion-label){margin-top:12px;margin-bottom:12px}:host(.segment-button-layout-icon-top) ::slotted(ion-label),:host(.segment-button-layout-icon-bottom) ::slotted(ion-icon){margin-top:0}:host(.segment-button-layout-icon-top) ::slotted(ion-icon),:host(.segment-button-layout-icon-bottom) ::slotted(ion-label){margin-bottom:0}:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:8px;margin-right:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:8px;margin-inline-start:8px;-webkit-margin-end:0;margin-inline-end:0}}:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:0;margin-right:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px}}:host(.segment-button-has-icon-only) ::slotted(ion-icon){margin-top:12px;margin-bottom:12px}:host(.segment-button-has-label-only) ::slotted(ion-label){margin-top:12px;margin-bottom:12px}.segment-button-indicator{left:0;right:0;bottom:0}.segment-button-indicator-background{background:var(--indicator-color)}:host(.in-toolbar:not(.in-segment-color)) .segment-button-indicator-background{background:var(--ion-toolbar-segment-indicator-color, var(--indicator-color))}:host(.in-toolbar-color:not(.in-segment-color)) .segment-button-indicator-background{background:var(--ion-color-contrast)}\";\n\nlet ids = 0;\nconst SegmentButton = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.segmentEl = null;\n        this.checked = false;\n        /**\n         * If `true`, the user cannot interact with the segment button.\n         */\n        this.disabled = false;\n        /**\n         * Set the layout of the text and icon in the segment.\n         */\n        this.layout = 'icon-top';\n        /**\n         * The type of the button.\n         */\n        this.type = 'button';\n        /**\n         * The value of the segment button.\n         */\n        this.value = 'ion-sb-' + (ids++);\n        this.updateState = () => {\n            if (this.segmentEl) {\n                this.checked = this.segmentEl.value === this.value;\n            }\n        };\n    }\n    connectedCallback() {\n        const segmentEl = this.segmentEl = this.el.closest('ion-segment');\n        if (segmentEl) {\n            this.updateState();\n            segmentEl.addEventListener('ionSelect', this.updateState);\n        }\n    }\n    disconnectedCallback() {\n        const segmentEl = this.segmentEl;\n        if (segmentEl) {\n            segmentEl.removeEventListener('ionSelect', this.updateState);\n            this.segmentEl = null;\n        }\n    }\n    get hasLabel() {\n        return !!this.el.querySelector('ion-label');\n    }\n    get hasIcon() {\n        return !!this.el.querySelector('ion-icon');\n    }\n    render() {\n        const { checked, type, disabled, hasIcon, hasLabel, layout } = this;\n        const mode = getIonMode(this);\n        return (h(Host, { \"aria-disabled\": disabled ? 'true' : null, class: {\n                [mode]: true,\n                'in-toolbar': hostContext('ion-toolbar', this.el),\n                'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n                'in-segment': hostContext('ion-segment', this.el),\n                'in-segment-color': hostContext('ion-segment[color]', this.el),\n                'segment-button-has-label': hasLabel,\n                'segment-button-has-icon': hasIcon,\n                'segment-button-has-label-only': hasLabel && !hasIcon,\n                'segment-button-has-icon-only': hasIcon && !hasLabel,\n                'segment-button-disabled': disabled,\n                'segment-button-checked': checked,\n                [`segment-button-layout-${layout}`]: true,\n                'ion-activatable': true,\n                'ion-activatable-instant': true,\n                'ion-focusable': true,\n            } }, h(\"button\", { type: type, \"aria-pressed\": checked ? 'true' : 'false', class: \"button-native\", disabled: disabled }, h(\"span\", { class: \"button-inner\" }, h(\"slot\", null)), mode === 'md' && h(\"ion-ripple-effect\", null)), h(\"div\", { part: \"indicator\", class: {\n                'segment-button-indicator': true,\n                'segment-button-indicator-animated': true\n            } }, h(\"div\", { part: \"indicator-background\", class: \"segment-button-indicator-background\" }))));\n    }\n    get el() { return getElement(this); }\n};\nSegmentButton.style = {\n    /*STENCIL:MODE:ios*/ ios: segmentButtonIosCss,\n    /*STENCIL:MODE:md*/ md: segmentButtonMdCss\n};\n\nexport { Segment as ion_segment, SegmentButton as ion_segment_button };\n"],"sourceRoot":"webpack:///","file":"58-es5.js"}