{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-img.entry.js"],"names":[],"mappings":"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","sourcesContent":["import { r as registerInstance, d as createEvent, h, H as Host, e as getElement } from './index-e23c3ffd.js';\nimport { b as getIonMode } from './ionic-global-fbc9a2ac.js';\n\nconst imgCss = \":host{display:block;-o-object-fit:contain;object-fit:contain}img{display:block;width:100%;height:100%;-o-object-fit:inherit;object-fit:inherit;-o-object-position:inherit;object-position:inherit}\";\n\nconst Img = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.onLoad = () => {\n            this.ionImgDidLoad.emit();\n        };\n        this.onError = () => {\n            this.ionError.emit();\n        };\n        this.ionImgWillLoad = createEvent(this, \"ionImgWillLoad\", 7);\n        this.ionImgDidLoad = createEvent(this, \"ionImgDidLoad\", 7);\n        this.ionError = createEvent(this, \"ionError\", 7);\n    }\n    srcChanged() {\n        this.addIO();\n    }\n    componentDidLoad() {\n        this.addIO();\n    }\n    addIO() {\n        if (this.src === undefined) {\n            return;\n        }\n        if ('IntersectionObserver' in window) {\n            this.removeIO();\n            this.io = new IntersectionObserver(data => {\n                // because there will only ever be one instance\n                // of the element we are observing\n                // we can just use data[0]\n                if (data[0].isIntersecting) {\n                    this.load();\n                    this.removeIO();\n                }\n            });\n            this.io.observe(this.el);\n        }\n        else {\n            // fall back to setTimeout for Safari and IE\n            setTimeout(() => this.load(), 200);\n        }\n    }\n    load() {\n        this.loadError = this.onError;\n        this.loadSrc = this.src;\n        this.ionImgWillLoad.emit();\n    }\n    removeIO() {\n        if (this.io) {\n            this.io.disconnect();\n            this.io = undefined;\n        }\n    }\n    render() {\n        return (h(Host, { class: getIonMode(this) }, h(\"img\", { decoding: \"async\", src: this.loadSrc, alt: this.alt, onLoad: this.onLoad, onError: this.loadError, part: \"image\" })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"src\": [\"srcChanged\"]\n    }; }\n};\nImg.style = imgCss;\n\nexport { Img as ion_img };\n"],"sourceRoot":"webpack:///","file":"25-es5.js"}